{"version":3,"sources":["InternalButtons.js","Buttons.js","Select.js","List.js","App.js","index.js"],"names":["InternalButtons","button","changeCurrentButton","page","map","btn","i","onClick","type","key","className","Buttons","this","props","changePage","total","perPage","drawButtons","buttonsCount","Math","ceil","buttons","Set","values","splice","disabled","React","Component","choosePerPage","Select","changePerPage","value","onChange","event","List","currentContent","content","slice","item","Array","fill","el","App","state","length","setState","target","direction","count","idx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f21f81c1.chunk.js","sourcesContent":["import React from 'react';\n\nconst InternalButtons = ({ button, changeCurrentButton, page }) => (\n  button.map((btn, i) => {\n    if (typeof btn === 'number') {\n      return (\n        <button\n          onClick={() => changeCurrentButton(btn)}\n          type=\"button\"\n          key={btn + i}\n          className={btn === page\n            ? 'button--active button'\n            : 'button--disabled button'\n          }\n        >\n          {btn}\n        </button>\n      );\n    }\n\n    if (typeof btn === 'string') {\n      return (\n        <span className=\"dot\" key={btn}>...</span>\n      );\n    }\n  })\n);\n\nexport default InternalButtons;\n","import React from 'react';\nimport InternalButtons from './InternalButtons';\n\nclass Buttons extends React.Component {\n  render() {\n    const {\n      changeCurrentButton, page, changePage,\n      total, perPage, drawButtons,\n    } = this.props;\n\n    const buttonsCount = Math.ceil(total / +perPage);\n    const buttons = drawButtons(buttonsCount);\n\n    const button = [...new Set(buttons).values()];\n\n    if (page >= 4 && page <= buttonsCount - 3) {\n      button.splice(-1, 0, 'lastDot')\n    }\n\n    return (\n      <>\n        <button\n          type=\"button\"\n          onClick={() => changePage(-1)}\n          disabled={page === 1}\n          className=\"direction\"\n        >\n          Prev\n        </button>\n        <InternalButtons\n          changeCurrentButton={changeCurrentButton}\n          button={button}\n          page={page}\n        />\n        <button\n          type=\"button\"\n          onClick={() => changePage(1)}\n          disabled={page === buttonsCount}\n          className=\"direction\"\n        >\n          Next\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Buttons;\n","import React from 'react';\n\nconst choosePerPage = [5, 10, 15, 20];\n\nconst Select = ({ perPage, changePerPage }) => (\n  <select\n    value={perPage}\n    onChange={event => changePerPage(event)}\n    className=\"select\"\n  >\n    {choosePerPage.map(page => (\n      <option value={page} key={page}>\n        {page}\n      </option>\n    ))}\n  </select>\n);\n\nexport default Select;\n","import React from 'react';\n\nconst List = ({ page, perPage, content }) => {\n  const currentContent = content.slice((page - 1) * perPage, perPage * page);\n\n  return (\n    <ul>\n      {currentContent.map(item => (\n        <li className=\"item\" key={item}>\n          {item}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport './App.css';\n\nimport Buttons from './Buttons';\nimport Select from './Select';\nimport List from './List';\n\nconst content = new Array(42)\n  .fill(0).map((el, i) => `${i + 1}`);\n\nclass App extends React.Component {\n  state = {\n    total: content.length,\n    perPage: 5,\n    page: 1,\n  }\n\n  changePerPage = (event) => {\n    this.setState({\n      perPage: event.target.value, page: 1,\n    });\n  }\n\n  changeCurrentButton = (button) => {\n    this.setState({ page: button });\n  }\n\n  changePage = (direction) => {\n    this.setState(state => ({ page: state.page + direction }));\n  }\n\n  drawButtons = (count) => {\n    const { page } = this.state;\n\n    return new Array(count)\n      .fill(0).map((el, i) => {\n        const idx = i + 1;\n\n        if (idx === 1\n          || idx === page - 1\n          || idx === page\n          || idx === page + 1\n          || idx === count) {\n          return i + 1;\n        }\n\n        return 'dot';\n      });\n  }\n\n  render() {\n    const { total, perPage, page } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>\n          Showing from\n          {' '}\n          {page - 1 === 0\n            ? 1\n            : (page - 1) * perPage + 1}\n          {' '}\n          to\n          {' '}\n          {perPage * page > total\n            ? total\n            : perPage * page}\n          {' '}\n          of\n          {' '}\n          {total}\n        </h1>\n        <List\n          page={page}\n          perPage={perPage}\n          content={content}\n        />\n        <Select\n          perPage={perPage}\n          changePerPage={this.changePerPage}\n        />\n        <Buttons\n          page={page}\n          changePage={this.changePage}\n          changeCurrentButton={this.changeCurrentButton}\n          perPage={perPage}\n          total={total}\n          drawButtons={this.drawButtons}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}