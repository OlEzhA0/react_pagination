{"version":3,"sources":["Buttons.js","Select.js","List.js","App.js","index.js"],"names":["Buttons","buttonCount","page","changePage","changeCurrentButton","type","onClick","disabled","className","map","button","key","length","Select","perPage","changePerPage","choosePerPage","value","onChange","event","List","currentContent","item","App","state","total","setState","target","direction","this","content","Array","fill","el","i","Math","ceil","splice","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iNA8CeA,G,MA3CC,SAAC,GAAD,IACdC,EADc,EACdA,YAAaC,EADC,EACDA,KAAMC,EADL,EACKA,WAAYC,EADjB,EACiBA,oBADjB,OAGd,oCACE,4BACEC,KAAK,SACLC,QAAS,kBAAMH,GAAY,IAC3BI,SAAmB,IAATL,EACVM,UAAU,aAJZ,QAQCP,EAAYQ,KAAI,SAAAC,GAAM,OACrB,4BACEJ,QAAS,kBAAMF,EAAoBM,IACnCL,KAAK,SACLM,IAAKD,EACLF,UAAWE,IAAWR,EAClB,wBACA,2BAGHQ,MAGL,4BACEL,KAAK,SACLC,QAAS,kBAAMH,EAAW,IAC1BI,SAAUL,IAASD,EAAYA,EAAYW,OAAS,GACpDJ,UAAU,aAJZ,WCLWK,EApBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,cAAeC,EAA3B,EAA2BA,cAA3B,OACb,4BACEC,MAAOH,EACPI,SAAU,SAAAC,GAAK,OAAIJ,EAAcI,IACjCX,UAAU,UAETQ,EAAcP,KAAI,SAAAP,GAAI,OACrB,4BAAQe,MAAOf,EAAMS,IAAKT,GACvBA,QCMMkB,EAdF,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OACX,4BACGA,EAAeZ,KAAI,SAAAa,GAAI,OACtB,wBAAId,UAAU,OAAOG,IAAKW,GACvBA,QCmEMC,E,4MAlEbC,MAAQ,CACNC,MAAO,GACPX,QAAS,EACTZ,KAAM,G,EAGRa,cAAgB,SAACI,GACf,EAAKO,SAAS,CACZZ,QAASK,EAAMQ,OAAOV,MAAOf,KAAM,K,EAIvCE,oBAAsB,SAACM,GACrB,EAAKgB,SAAS,CAAExB,KAAMQ,K,EAGxBP,WAAa,SAACyB,GACZ,EAAKF,UAAS,SAAAF,GAAK,MAAK,CAAEtB,KAAMsB,EAAMtB,KAAO0B,O,uDAGrC,IAAD,EAC0BC,KAAKL,MAA9BC,EADD,EACCA,MAAOX,EADR,EACQA,QAASZ,EADjB,EACiBA,KAClB4B,EAAU,IAAIC,MAAMN,GACvBO,KAAK,GAAGvB,KAAI,SAACwB,EAAIC,GAAL,gBAAcA,EAAI,MAE3BjC,EAAc,IAAI8B,MAAMI,KAAKC,KAAKX,EAAQX,IAC7CkB,KAAK,GAAGvB,KAAI,SAACwB,EAAIC,GAAL,OAAWA,EAAI,KACxBb,EAAiBS,EAAQO,QAAQnC,EAAO,GAAKY,EAASA,GAE5D,OACE,yBAAKN,UAAU,aACb,2CAEG,IACAN,EAAO,IAAM,EACV,GACCA,EAAO,GAAKY,EAAU,EAC1B,IANH,KAQG,IACAA,EAAUZ,EAAOuB,EACdA,EACAX,EAAUZ,EACb,IAZH,KAcG,IACAuB,GAEH,kBAAC,EAAD,CAAMJ,eAAgBA,IACtB,kBAAC,EAAD,CACEP,QAASA,EACTC,cAAec,KAAKd,cACpBC,cA5BgB,CAAC,EAAG,GAAI,GAAI,MA8B9B,kBAAC,EAAD,CACEf,YAAaA,EACbC,KAAMA,EACNC,WAAY0B,KAAK1B,WACjBC,oBAAqByB,KAAKzB,2B,GA3DlBkC,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7d1745a9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes, { number } from 'prop-types';\n\nconst Buttons = ({\n  buttonCount, page, changePage, changeCurrentButton,\n}) => (\n  <>\n    <button\n      type=\"button\"\n      onClick={() => changePage(-1)}\n      disabled={page === 1}\n      className=\"direction\"\n    >\n      Prev\n    </button>\n    {buttonCount.map(button => (\n      <button\n        onClick={() => changeCurrentButton(button)}\n        type=\"button\"\n        key={button}\n        className={button === page\n          ? 'button--active button'\n          : 'button--disabled button'\n        }\n      >\n        {button}\n      </button>\n    ))}\n    <button\n      type=\"button\"\n      onClick={() => changePage(1)}\n      disabled={page === buttonCount[buttonCount.length - 1]}\n      className=\"direction\"\n    >\n      Next\n    </button>\n  </>\n);\n\nButtons.propTypes = {\n  buttonCount: PropTypes.arrayOf(number).isRequired,\n  page: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n  changeCurrentButton: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes, { number } from 'prop-types';\n\nconst Select = ({ perPage, changePerPage, choosePerPage }) => (\n  <select\n    value={perPage}\n    onChange={event => changePerPage(event)}\n    className=\"select\"\n  >\n    {choosePerPage.map(page => (\n      <option value={page} key={page}>\n        {page}\n      </option>\n    ))}\n  </select>\n);\n\nSelect.propTypes = {\n  perPage: PropTypes.number.isRequired,\n  changePerPage: PropTypes.func.isRequired,\n  choosePerPage: PropTypes.arrayOf(number).isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes, { number } from 'prop-types';\n\nconst List = ({ currentContent }) => (\n  <ul>\n    {currentContent.map(item => (\n      <li className=\"item\" key={item}>\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n\nList.propTypes = {\n  currentContent: PropTypes.arrayOf(number).isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport './App.css';\n\nimport Buttons from './Buttons';\nimport Select from './Select';\nimport List from './List';\n\nclass App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  }\n\n  changePerPage = (event) => {\n    this.setState({\n      perPage: event.target.value, page: 1,\n    });\n  }\n\n  changeCurrentButton = (button) => {\n    this.setState({ page: button });\n  }\n\n  changePage = (direction) => {\n    this.setState(state => ({ page: state.page + direction }));\n  }\n\n  render() {\n    const { total, perPage, page } = this.state;\n    const content = new Array(total)\n      .fill(0).map((el, i) => `${i + 1}`);\n    const choosePerPage = [5, 10, 15, 20];\n    const buttonCount = new Array(Math.ceil(total / perPage))\n      .fill(0).map((el, i) => i + 1);\n    const currentContent = content.splice((page - 1) * perPage, perPage);\n\n    return (\n      <div className=\"container\">\n        <h1>\n          Showing from\n          {' '}\n          {page - 1 === 0\n            ? 1\n            : (page - 1) * perPage + 1}\n          {' '}\n          to\n          {' '}\n          {perPage * page > total\n            ? total\n            : perPage * page}\n          {' '}\n          of\n          {' '}\n          {total}\n        </h1>\n        <List currentContent={currentContent} />\n        <Select\n          perPage={perPage}\n          changePerPage={this.changePerPage}\n          choosePerPage={choosePerPage}\n        />\n        <Buttons\n          buttonCount={buttonCount}\n          page={page}\n          changePage={this.changePage}\n          changeCurrentButton={this.changeCurrentButton}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}